---
title: python_학습법
date: 2019-08-03 20:26:00
categories:
 - Language
tag:
 - Python
---

## C.T. (Computational Thinking)

- Compute : 계산하다.
- 현상을 **분해→ 패턴화→ 추상화→ 알고리즘**으로 문제를 해결하기 위함
- input → [  ] → output

[deepmind 단백질 접기 올림픽]: http://www.ibric.org/myboard/read.php?id=300218&amp;amp;Board=news	"문제해결 대표 예시"



## 알고리즘

- 자세해야 한다.
- "**매우**" 자세해야 한다.
- 가정을 확인 할때는 **본명제와 대우를 확인하면 된다.**



※ 생전 처음보는 문제를 보았을때!!!

→ 어떻게 풀지 그냥 생각해본다.

→ 잘모르겠으면 조건을 지키면서 하나씩 대입, 빠짐없이 실행 해보면서 규칙을 찾거나 해결방법을 고민해보자.

(문제풀이) > 조건을 세분화 > 더 더 세분화





> 알고리즘 문제, 언어학습은 노가다가 정답
>
> 코딩테스트가 그러하다. 그니까 그냥 해.... 지름길 없어



## 언어

- 이진수 → 어셈블리어 → C언어 → 등등
- 오류 뜨면 **대/소문자, 띄어쓰기, 스펠링**  먼저 확인하자...



## 새로운 기술을 접하고 싶을때...

- "**인강**"  을 듣거나     ---- mooc, youtube
- "**책**" 을 사서 보거나 ---- 인터넷서점, 서점, 도서관
- "**수업**" 을 들어라...   ---- 대학교수업, 국비지원, 학원, 인턴..



알고 있었던거 같은데 모르고 살았던거 같은....하아...



----그냥 참고할거----
검색을 할때는

- 파이썬 random 모듈
- Python random module
  이렇게 구글링 해보고 ~Doc 되어 있는 공식 문서 래퍼런스를 읽어보며 예시를 실행시켜보면서 사용법을 익힌다.

[^YOLO]: 딥러닝 API
[^요즘 기업전략을 확인하고 싶다면]: 4차 산업혁명 참여 기업 전략 검색 ㄱㄱ



## Python_예제__print

### 기본_"안녕~!"을 찍어보자

```python
#1
print("안녕~!")

#변수를 이용해보자
a="안녕"
print(a)

#리스트를 이용해보자
b=["안녕","hi","오하이요"]
print(b[0])

#딕셔너리를 이용해 안녕 표현의 언어를 프린트 해보자
c={'안녕':'한국', 'hi':'미국','오하이요':'일본'}
print(c['안녕'])
```



### 실습_메뉴를 말해주는 chatbot 만들기

```python
import random

menu=['닭','삼겹살','국수','빵','비빔밥']
pick=random.choice(menu)

print(pick)
```



### 실습_딕셔너리를 이용해서 점심메뉴 가게 전화번호를 보여주세요

```python
import random

menu=['닭','삼겹살','국수','빵','비빔밥']
phonenumber={'닭':'010-111-1111','삼겹살':'010-222-2222','국수':'010-333-3333','빵':'010-444-4444','비빔밥':'010-555-5555'}
pick=random.choice(menu)

print(pick)
print(phonenumber[pick])
```







## 조건; if / elif / else

### 실습_미세먼지 농도를 받아 좋고, 나쁨 현재 상태를 출력하세요

```python
import requests
from bs4 import BeautifulSoup

url = 'http://openapi.airkorea.or.kr/openapi/services/rest/ArpltnInforInqireSvc/getCtprvnRltmMesureDnsty?serviceKey=' + key + '&numOfRows=10&pageSize=10&pageNo=1&startPage=1&sidoName=%EA%B4%91%EC%A3%BC&ver=1.3'
request = requests.get(url).text
soup = BeautifulSoup(request,'xml')
dong = soup('item')[7]
location = dong.stationName.text
time = dong.dataTime.text
dust = int(dong.pm10Value.text)
stat =""

print("{0} 기준 {1}의 미세먼지 농도는 {2}입니다.".format(time,location,dust))

if(dust<15):
  stat="좋음"
elif(dust>16 and dust<50):
  stat="보통"
elif(dust>51 and dust<100):
  stat="나쁨"
else :
  stat="매우 나쁨"
print("현재 미세먼지 농도는 %d 이고 현재상태 %s"% (dust, stat))
```







## 반복; while / for

### 실습_for문을 써서 'go' 4번 출력해보세요

```python
for i in range(1,5):
    print('go')
```



### 실습_숫자 45개 중 로또 숫자 5개를 뽑아보자

```python
import random

lotto=range(1,46)  #range는 range(1,46) **오른쪽 숫자보다 1 작은 수까지 수열 결과 보여준다.**
lotlist=random.sample(lotto,5)

print(lotlist)
```





------

### 심화_공공데이터 활용 미세먼지 봇 만들기

```python
#숙제^^
```



[^공공데이터포털]: 기타 공공데이터를 받을 수 있는 사이트
[^requests]: 데이터 받는 파이썬 모듈
[^BeautifulSoup]: parser 모듈 함수 크롤링 할때 좋음
[^자소설닷컴]: IBM personal Insight









# Python_실습으로 다지기



- ## 기본 문법

  - [print](example/PYTHON_print.py)





- ## PYTHON_module_사용

  - **csv**
    - [읽기](example/module_os_01.py)
    - [쓰기](example/module_Faker.py)
  - [**faker**](example/module_Faker.py)



- [**os**](example/module_os_01.py)



- [**SMTP**](example/module_SMTP_01.py)



- [**webbrowser**](example/module_webbrowser_01.py)



- ## Chatbot

  - Offline
    - [밥메뉴 말해주는 chatbot](example/offline_chatbot_01.py)
    - [가게 전화번호 말해줘(feat. 딕셔너리)](example/offline_chatbot_02.py)
    - [미세먼지 상태 출력](example/offline_chatbot_03.py)
    - [로또 자동번호 발권기](example/offline_chatbot_04.py)



- Online
  - [공공데이터API 활용 미세먼지 예보](example/online_chatbot_01.py)





- ## Crawling

  - [다음 검색 순위 긁어오기](example/crawling_01.py)
  - [네이버 검색 순위 긁어오기](example/crawling_02.py)
  - [게시판 제목 긁어오기](example/crawling_03.py)
  - [구글 검색 결과 제목 긁어오기](example/crawling_04.py)